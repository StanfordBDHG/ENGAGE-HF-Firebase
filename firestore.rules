rules_version = '2';
service cloud.firestore {
  match /databases/{databaseId}/documents {
    function isAuthenticated(request) {
      return request.auth != null
    }

    function isAdmin(request) {
      return isAuthenticated(request)
        && request.auth.token.type == 'admin'
    }

    function isOwner(request, organizationId) {
      return isAuthenticated(request)
        && request.auth.token.organization == organizationId
        && request.auth.isOwner == true
    }

    function isClinician(request, organizationId) {
      return isAuthenticated(request)
        && request.auth.token.type == 'clincian'
        && request.auth.token.organization == organizationId
    } 

    function isPatient(request, organizationId) {
      return isAuthenticated(request)
        && request.auth.token.type == 'patient'
        && request.auth.token.organization == organizationId
    }
    
    function isUser(request, userId) {
      return isAuthenticated(request) && request.auth.uid == userId
    }

    match /invitations/{invitationId} {
      allow read, write: if isAdmin(request) || (
        !('organization' in request.resource.data) && (
          isOwner(request, resource.data.user.organization)
          || isClincian(request, resource.data.user.organization)
        )
      )
    }

    match /medications/{documents=**} {
      allow read: if isAuthenticated(request)
      allow write: if isAdmin(request)
    }

    match /organizations/{organizationId} {
      allow read: if isAuthenticated(request)
      allow update: if isAdmin(request) || isOwner(request, organizationId)
      allow create, delete: if isAdmin(request)
    }

    match /questionnaires/{questionnaireId} {
      allow read: if isAuthenticated(request)
      allow write: if isAdmin(request)
    }

    match /users/{userId} {
      function isAllowedUserRead(request) {
        return isAdmin(request)
          || isOwner(request, resource.data.organization)
          || isClinician(request, resource.data.organization)
          || isUser(request, userId)
      }

      function isAllowedUserUpdate(request) {
        return isAdmin(request) || (
          !('organization' in request.resource.data) && (
            isOwner(request, resource.data.organization)
            || isClinician(request, resource.data.organization)
            || isUser(request, userId)
          )
        )
      }

      allow read: if isAuthenticated(request) && isAllowedUserRead(request)
      allow update: if isAuthenticated(request) && isAllowedUserUpdate(request)
      allow create, delete: if isAdmin(request)

      match /{collection}/{documentId} {
        function isPatientWritableCollectionName() {
          return collectionName.matches('/^[A-Za-z]+Observations$/')
            || collectionName == 'questionnaireResponses'
        }

        function isClinicianWritableCollectionName() {
          return collectionName == 'allergyIntolerances'
            || collectionName == 'appointments'
            || collectionName == 'medicationRequests'
            || collectionName == 'medicationRecommendations'
            || collectionName == 'symptomScores'
            || collectionName == 'messages'
        }

        function isClinicianReadable(request) {
          let authUser = getUser(request.auth.uid)
          let user = getUser(userId)
          return isAdmin(request)
            || isOwner(request, user.organization)
            || isOwner(request, user.organization)
        }

        function isClinicianWritable(request) {
          let user = getUser(userId)
          return authUser.type == 'admin' || (
            isClinicianWritable() && (
              isOwner(request, user.organization)
              || isClinician(request, user.organization)
           )
          )
        }

        allow read: if isAuthenticated(request) && (
          isUser(request, userId) 
          || isClinicianReadable(request)
        )
        allow write: if isAuthenticated(request) && (
          (isUser(request, userId) && isPatientWritableCollectionName())
          || isClinicianWritable(request)
        )
      }
    }

    match /videoSections/{documents=**} {
      allow read: if isAuthenticated(request)
      allow write: if isAdmin(request)
    }
  }
}